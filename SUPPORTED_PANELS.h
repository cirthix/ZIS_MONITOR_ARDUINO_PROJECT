#ifndef SUPPORTEDPANELS_H
#define SUPPORTEDPANELS_H

#include <Arduino.h>
#include <SoftIIC.h>

#define SPLIT_Pulse_SUPPORT DISABLED

#define LVDS_MAPPING_VESA 0
#define LVDS_MAPPING_JEIDA 1

#define PIXEL_ORDERING_SEQUENTIAL 0
#define PIXEL_ORDERING_LEFTRIGHT 1


#define LVDS_SWING_LEVEL_LOW 0
#define LVDS_SWING_LEVEL_HIGH 1

PROGMEM const uint8_t EDID_ALL_ZEROES_INVALID[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};


extern uint16_t GetRefreshRate();
extern void zdelay(unsigned long delayvalue);
extern void OSDoutput();

inline void panel_script_startup_v390dk1();
inline void panel_script_shutdown(){}
inline void panel_script_3dmodechange(){}       // this function is only used if the panel has to do something when switching to 3d mode
inline void panel_script_refreshratechange(){}  // this function is only used if  WATCH_FOR_MODE_CHANGE is defined
inline void panel_script_refreshratechange_v390dk1();

#if PANEL_VERSION==PANEL_IS_M270HHF
  inline void panel_print_name(){ Serial.println(F("CMI M270HHF-L10"));}
  const uint16_t BACKLIGHT_STRING_CURRENT_CONTINUIOUS = 100; // Current in milliamps, under 100% dutycycle operation
  const uint16_t BACKLIGHT_STRING_CURRENT_STROBING = 160; // Current in milliamps, under 18% dutycycle operation  
  const uint16_t VIDEO_SIGNAL_TO_BACKLIGHT_ON_DELAY = 100; // MILLISECONDS signal-to-backlight delay as per panel datasheet recommendations
  const uint8_t PANEL_VOLTAGE = 12;
  #define PANEL_RESOLUTION_X 1920
  #define PANEL_BIT_DEPTH     8 
  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_LOW
  #define PIXEL_ORDERING PIXEL_ORDERING_SEQUENTIAL
  #define LVDS_MAPPING LVDS_MAPPING_VESA
  
//This is the safest EDID for 240Hz, it has a 120Hz fallback and lacks the range limit block which could be misinterpreted
//  PROGMEM const uint8_t EDID_DVI_FAST_AND_SAFE[]          = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x00, 0x24, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x03, 0x80, 0x3C, 0x22, 0x78, 0x2E, 0x3D, 0xC1, 0xA4, 0x56, 0x4E, 0x9E, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x28, 0xD7, 0x80, 0x78, 0x70, 0x38, 0x2D, 0x40, 0x30, 0x20, 0x35, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1A, 0x8A, 0x6F, 0x80, 0xA0, 0x70, 0x38, 0x40, 0x40, 0x30, 0x20, 0x35, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x31, 0x30, 0x38, 0x30, 0x70, 0x32, 0x34, 0x30, 0x53, 0x00, 0x94};
  PROGMEM const uint8_t EDID_240_WITH_FALLBACK_AND_HDMI[]   = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x00, 0x24, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x03, 0x80, 0x3C, 0x22, 0x78, 0x2E, 0x3D, 0xC1, 0xA4, 0x56, 0x4E, 0x9E, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x28, 0xD7, 0x80, 0x78, 0x70, 0x38, 0x2D, 0x40, 0x30, 0x20, 0x35, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1A, 0x8A, 0x6F, 0x80, 0xA0, 0x70, 0x38, 0x40, 0x40, 0x30, 0x20, 0x35, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x31, 0x30, 0x38, 0x30, 0x70, 0x32, 0x34, 0x30, 0x63, 0x01, 0x83, 0x02, 0x03, 0x04, 0x00, 0x28, 0xD7, 0x80, 0x78, 0x70, 0x38, 0x2D, 0x40, 0x30, 0x20, 0x35, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1A, 0x8A, 0x6F, 0x80, 0xA0, 0x70, 0x38, 0x40, 0x40, 0x30, 0x20, 0x35, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDE};
  PROGMEM const uint8_t EDID_240_NO_FALLBACK[]              = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x00, 0x24, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x03, 0x80, 0x3C, 0x22, 0x78, 0x2E, 0x3D, 0xC1, 0xA4, 0x56, 0x4E, 0x9E, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x28, 0xD7, 0x80, 0x78, 0x70, 0x38, 0x2D, 0x40, 0x30, 0x20, 0x35, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x31, 0x30, 0x38, 0x30, 0x70, 0x32, 0x34, 0x30, 0x78, 0x00, 0x06};

#define EDID_0_SLOT EDID_240_WITH_FALLBACK_AND_HDMI
#define EDID_1_SLOT EDID_240_NO_FALLBACK
  
  //void run_startup_script_panel(){}
  //void run_shutdown_script_panel(){}
  inline void panel_script_startup(){} // No panel startup script is necessary for this panel.  By default, any GPIOs will be left floating.  NO 3DMODE AND VESA BIT MAPPING IS JUST FINE


#elif PANEL_VERSION==PANEL_IS_V390DKZIS
  inline void panel_print_name(){ Serial.println(F("ZWS V390DK1-ZIS (30bit)"));}
  const uint16_t BACKLIGHT_STRING_CURRENT_CONTINUIOUS = 145; // Current in milliamps, under 100% dutycycle operation
  const uint16_t BACKLIGHT_STRING_CURRENT_STROBING = 360; // Current in milliamps, under 10% dutycycle operation
  const uint16_t VIDEO_SIGNAL_TO_BACKLIGHT_ON_DELAY = 0; // MILLISECONDS signal-to-backlight delay as per panel datasheet recommendations
  const uint8_t PANEL_VOLTAGE = 12;
  #define PANEL_RESOLUTION_X 2560 // This should be 3840...
  #define PANEL_BIT_DEPTH     10 
  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_HIGH  
  #define PIXEL_ORDERING PIXEL_ORDERING_SEQUENTIAL
  #define LVDS_MAPPING LVDS_MAPPING_VESA
  #define PANEL_SERIAL_CONTROL PANEL_GPIO0  // Connect to pin 7 of the 51pin connector on TCON.  High turns on the OSD.  Off or floating disables the OSD.
  #define MASTERSLAVE_MODE true 
  #define NEEDS_FAST_SYNC_CAPABILITY true
  
  PROGMEM const uint8_t EDID_V390DK_ZIS_MASTER[] = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x3C, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x30, 0xCC, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0xAB, 0xE0, 0x11, 0x00, 0x00, 0x1A, 0x18, 0x66, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0xAB, 0xE0, 0x11, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0x78, 0x84, 0x09, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x33, 0x39, 0x22, 0x20, 0x34, 0x4B, 0x31, 0x32, 0x30, 0x01, 0x87, 0x70, 0x12, 0x79, 0x00, 0x00, 0x12, 0x00, 0x16, 0x82, 0x10, 0x00, 0x00, 0x7F, 0x07, 0x6F, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A, 0x49, 0x53, 0x39, 0x00, 0x00, 0x00, 0x13, 0x37, 0x03, 0x00, 0x28, 0x2F, 0xCC, 0x00, 0x84, 0x7F, 0x07, 0x3B, 0x00, 0x17, 0x80, 0x0F, 0x00, 0x6F, 0x08, 0x27, 0x00, 0x02, 0x00, 0x04, 0x00, 0x17, 0x66, 0x00, 0x04, 0x7F, 0x07, 0x3B, 0x00, 0x17, 0x80, 0x0F, 0x00, 0x6F, 0x08, 0x27, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x90};
  PROGMEM const uint8_t EDID_V390DK_ZIS_SLAVE[]  = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x3C, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x30, 0xCC, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x10, 0x20, 0x3A, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x18, 0x66, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x10, 0x20, 0x3A, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0x78, 0x84, 0x09, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x33, 0x39, 0x22, 0x20, 0x34, 0x4B, 0x31, 0x32, 0x30, 0x01, 0xD7, 0x70, 0x12, 0x79, 0x00, 0x00, 0x12, 0x00, 0x16, 0x80, 0x10, 0x10, 0x00, 0x7F, 0x07, 0x6F, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A, 0x49, 0x53, 0x39, 0x00, 0x00, 0x00, 0x13, 0x37, 0x03, 0x00, 0x28, 0x2F, 0xCC, 0x00, 0x84, 0x7F, 0x07, 0x3B, 0x00, 0x17, 0x80, 0x0F, 0x00, 0x6F, 0x08, 0x27, 0x00, 0x02, 0x00, 0x04, 0x00, 0x17, 0x66, 0x00, 0x04, 0x7F, 0x07, 0x3B, 0x00, 0x17, 0x80, 0x0F, 0x00, 0x6F, 0x08, 0x27, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x90};
  PROGMEM const uint8_t EDID_V390DK_ZIS_SINGLE[] = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x3D, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x40, 0xCE, 0x00, 0xA0, 0xF0, 0x70, 0x28, 0x80, 0x30, 0x20, 0x35, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x20, 0x67, 0x00, 0xA0, 0xF0, 0x70, 0x28, 0x80, 0x30, 0x20, 0x35, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x1E, 0x3C, 0x42, 0x84, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x33, 0x39, 0x22, 0x20, 0x34, 0x4B, 0x36, 0x30, 0x0A, 0x00, 0xEC};
  PROGMEM const uint8_t EDID_V390DK_ZIS_240HZ[]  = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x3E, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x99, 0xCC, 0x80, 0x37, 0x70, 0x38, 0x19, 0x40, 0x10, 0x18, 0x35, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x78, 0x69, 0x80, 0x50, 0x70, 0x38, 0x2D, 0x40, 0x10, 0x20, 0x35, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0xF0, 0x87, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x33, 0x39, 0x22, 0x20, 0x32, 0x34, 0x30, 0x48, 0x7A, 0x00, 0x40};
  PROGMEM const uint8_t EDID_V390DK_ZIS_360HZ[]  = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x3F, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xAC, 0x92, 0x00, 0x78, 0x50, 0xD0, 0x19, 0x20, 0x30, 0x20, 0x35, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x00, 0x69, 0x00, 0x78, 0x50, 0xD0, 0x50, 0x20, 0x30, 0x20, 0x35, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x0A, 0x1E, 0x69, 0xC0, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x33, 0x39, 0x22, 0x20, 0x33, 0x36, 0x30, 0x48, 0x7A, 0x00, 0xA3};
  PROGMEM const uint8_t EDID_V390DK_ZIS_480HZ[]  = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x40, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xB4, 0x75, 0xC0, 0xA5, 0x30, 0x1C, 0x12, 0x20, 0x30, 0x20, 0x35, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x4C, 0x3B, 0xC0, 0x8C, 0x30, 0x1C, 0x23, 0x20, 0x30, 0x20, 0x35, 0x00, 0x56, 0xE0, 0x31, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x0A, 0x1E, 0xE1, 0x8A, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x33, 0x39, 0x22, 0x20, 0x34, 0x38, 0x30, 0x48, 0x7A, 0x00, 0x6F};
  PROGMEM const uint8_t EDID_V390DK_ZIS_HALF[]   = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x3C, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x30, 0xCC, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0xAB, 0xE0, 0x11, 0x00, 0x00, 0x1A, 0x18, 0x66, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0xAB, 0xE0, 0x11, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0x78, 0x84, 0x09, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x33, 0x39, 0x22, 0x34, 0x4B, 0x31, 0x32, 0x30, 0x41, 0x00, 0x67};

#define PANEL_DEFAULT_EDID 0
 // #define EDID_0_SLOT EDID_V390DK_ZIS_HALF
 // #define EDID_0_SLAVE EDID_V390DK_ZIS_HALF


#if (HOST_INTERFACE == DISPLAYPORT)
  #define EDID_0_SLOT EDID_V390DK_ZIS_MASTER
  #define EDID_0_SLAVE EDID_V390DK_ZIS_SLAVE
  #define EDID_1_SLOT EDID_V390DK_ZIS_SINGLE
  #define EDID_1_SLAVE EDID_ALL_ZEROES_INVALID
  #define EDID_2_SLOT EDID_V390DK_ZIS_240HZ
  #define EDID_2_SLAVE EDID_ALL_ZEROES_INVALID
  #define EDID_3_SLOT EDID_V390DK_ZIS_360HZ
  #define EDID_3_SLAVE EDID_ALL_ZEROES_INVALID
  #define EDID_4_SLOT EDID_V390DK_ZIS_480HZ
  #define EDID_4_SLAVE EDID_ALL_ZEROES_INVALID
#else
  #error "Selected interface does not support selected panel"
#endif

  //void run_startup_script_panel(){}
  //void run_shutdown_script_panel(){}
  inline void panel_script_startup(){
    OSDoutput();
  }


#elif PANEL_VERSION==PANEL_IS_M280GJZIS
  inline void panel_print_name(){ Serial.println(F("ZWS M280DGJ-ZIS (30bit)"));}
  const uint16_t BACKLIGHT_STRING_CURRENT_CONTINUIOUS = 150; // Current in milliamps, under 100% dutycycle operation
  const uint16_t BACKLIGHT_STRING_CURRENT_STROBING = 250; // Current in milliamps, under 10% dutycycle operation
  const uint16_t VIDEO_SIGNAL_TO_BACKLIGHT_ON_DELAY = 0; // MILLISECONDS signal-to-backlight delay as per panel datasheet recommendations
  const uint8_t PANEL_VOLTAGE = 12;
  #define PANEL_RESOLUTION_X 2560 // This should be 3840...
  #define PANEL_BIT_DEPTH     10
  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_LOW
  #define PIXEL_ORDERING PIXEL_ORDERING_SEQUENTIAL
  #define LVDS_MAPPING LVDS_MAPPING_VESA
  #define PANEL_SERIAL_CONTROL PANEL_GPIO0  // Connect to pin 7 of the 51pin connector on TCON.  High turns on the OSD.  Off or floating disables the OSD.
  #define MASTERSLAVE_MODE true
  #define NEEDS_FAST_SYNC_CAPABILITY true
 
  PROGMEM const uint8_t EDID_M280DGJ_ZIS_MASTER[] = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF0, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x30, 0xCC, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0x36, 0x55, 0x11, 0x00, 0x00, 0x1A, 0x18, 0x66, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0x36, 0x55, 0x11, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0x78, 0x84, 0x09, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x34, 0x4B, 0x31, 0x32, 0x30, 0x01, 0x23, 0x70, 0x12, 0x79, 0x00, 0x00, 0x12, 0x00, 0x16, 0x82, 0x10, 0x00, 0x00, 0x7F, 0x07, 0x6F, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A, 0x49, 0x53, 0x28, 0x00, 0x00, 0x00, 0x13, 0x37, 0x03, 0x00, 0x28, 0x2F, 0xCC, 0x00, 0x84, 0x7F, 0x07, 0x3B, 0x00, 0x17, 0x80, 0x0F, 0x00, 0x6F, 0x08, 0x27, 0x00, 0x02, 0x00, 0x04, 0x00, 0x17, 0x66, 0x00, 0x04, 0x7F, 0x07, 0x3B, 0x00, 0x17, 0x80, 0x0F, 0x00, 0x6F, 0x08, 0x27, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x90};
  PROGMEM const uint8_t EDID_M280DGJ_ZIS_SLAVE[]  = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF0, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x30, 0xCC, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0x36, 0x55, 0x11, 0x00, 0x00, 0x1A, 0x18, 0x66, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0x36, 0x55, 0x11, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0x78, 0x84, 0x09, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x34, 0x4B, 0x31, 0x32, 0x30, 0x01, 0x23, 0x70, 0x12, 0x79, 0x00, 0x00, 0x12, 0x00, 0x16, 0x80, 0x10, 0x10, 0x00, 0x7F, 0x07, 0x6F, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A, 0x49, 0x53, 0x28, 0x00, 0x00, 0x00, 0x13, 0x37, 0x03, 0x00, 0x28, 0x2F, 0xCC, 0x00, 0x84, 0x7F, 0x07, 0x3B, 0x00, 0x17, 0x80, 0x0F, 0x00, 0x6F, 0x08, 0x27, 0x00, 0x02, 0x00, 0x04, 0x00, 0x17, 0x66, 0x00, 0x04, 0x7F, 0x07, 0x3B, 0x00, 0x17, 0x80, 0x0F, 0x00, 0x6F, 0x08, 0x27, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x90};
  PROGMEM const uint8_t EDID_M280DGJ_ZIS_SINGLE[] = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF1, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x40, 0xCE, 0x00, 0xA0, 0xF0, 0x70, 0x28, 0x80, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x20, 0x67, 0x00, 0xA0, 0xF0, 0x70, 0x28, 0x80, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x1E, 0x3C, 0x42, 0x84, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x34, 0x4B, 0x36, 0x30, 0x0A, 0x00, 0x90};
  PROGMEM const uint8_t EDID_M280DGJ_ZIS_240HZ[]    = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF2, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD5, 0xCE, 0x80, 0x40, 0x70, 0x38, 0x20, 0x40, 0x10, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x78, 0x69, 0x80, 0x50, 0x70, 0x38, 0x2D, 0x40, 0x10, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0xF0, 0x87, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x32, 0x34, 0x30, 0x48, 0x7A, 0x00, 0x8E};
  PROGMEM const uint8_t EDID_M280DGJ_ZIS_360HZ[]    = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF3, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xED, 0x9C, 0x00, 0xDC, 0x50, 0xD0, 0x18, 0x20, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x69, 0x00, 0x78, 0x50, 0xD0, 0x50, 0x20, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x0A, 0x1E, 0x69, 0xC0, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x33, 0x36, 0x30, 0x48, 0x7A, 0x00, 0x99};
  PROGMEM const uint8_t EDID_M280DGJ_ZIS_480HZ[]    = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF4, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC8, 0x82, 0xC0, 0x22, 0x31, 0x1C, 0x12, 0x20, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x4C, 0x3B, 0xC0, 0x8C, 0x30, 0x1C, 0x23, 0x20, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x0A, 0x1E, 0xE1, 0x8A, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x34, 0x38, 0x30, 0x48, 0x7A, 0x00, 0x74};
  //PROGMEM const uint8_t EDID_M280DGJ_ZIS_240HZ[]  = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF2, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x73, 0xCE, 0x80, 0x37, 0x70, 0x38, 0x23, 0x40, 0x10, 0x18, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x78, 0x69, 0x80, 0x50, 0x70, 0x38, 0x2D, 0x40, 0x10, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0xF0, 0x87, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x32, 0x34, 0x30, 0x48, 0x7A, 0x00, 0xFE};
  //PROGMEM const uint8_t EDID_M280DGJ_ZIS_300HZ[]  = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF3, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xAC, 0x92, 0x00, 0x78, 0x50, 0xD0, 0x19, 0x20, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x69, 0x00, 0x78, 0x50, 0xD0, 0x50, 0x20, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x0A, 0x1E, 0x69, 0xC0, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x33, 0x36, 0x30, 0x48, 0x7A, 0x00, 0x47};
  //PROGMEM const uint8_t EDID_M280DGJ_ZIS_480HZ[]  = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF4, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xB4, 0x75, 0xC0, 0xA5, 0x30, 0x1C, 0x12, 0x20, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x4C, 0x3B, 0xC0, 0x8C, 0x30, 0x1C, 0x23, 0x20, 0x30, 0x20, 0x35, 0x00, 0x6D, 0x55, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x0A, 0x1E, 0xE1, 0x8A, 0x0F, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x20, 0x34, 0x38, 0x30, 0x48, 0x7A, 0x00, 0x13};
  PROGMEM const uint8_t EDID_M280DGJ_ZIS_HALF[]   = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0xF0, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x01, 0x04, 0xB5, 0x3E, 0x22, 0x78, 0x26, 0x55, 0x21, 0xA1, 0x57, 0x4F, 0xA0, 0x28, 0x0F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x30, 0xCC, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0x36, 0x55, 0x11, 0x00, 0x00, 0x1A, 0x18, 0x66, 0x80, 0x3C, 0x70, 0x70, 0x28, 0x80, 0x18, 0x10, 0x35, 0x00, 0x36, 0x55, 0x11, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFD, 0x08, 0x1E, 0x78, 0x84, 0x09, 0x36, 0x01, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x57, 0x53, 0x20, 0x32, 0x38, 0x22, 0x34, 0x4B, 0x31, 0x32, 0x30, 0x41, 0x00, 0x03};

#define PANEL_DEFAULT_EDID 2

//  #define EDID_0_SLOT EDID_M280DGJ_ZIS_HALF
//  #define EDID_0_SLAVE EDID_M280DGJ_ZIS_HALF

#if (HOST_INTERFACE == DISPLAYPORT)
  #define EDID_0_SLOT EDID_M280DGJ_ZIS_MASTER
  #define EDID_0_SLAVE EDID_M280DGJ_ZIS_SLAVE
  #define EDID_1_SLOT EDID_M280DGJ_ZIS_SINGLE
  #define EDID_1_SLAVE EDID_ALL_ZEROES_INVALID
  #define EDID_2_SLOT EDID_M280DGJ_ZIS_240HZ
  #define EDID_2_SLAVE EDID_ALL_ZEROES_INVALID
  #define EDID_3_SLOT EDID_M280DGJ_ZIS_360HZ
  #define EDID_3_SLAVE EDID_ALL_ZEROES_INVALID
  #define EDID_4_SLOT EDID_M280DGJ_ZIS_480HZ
  #define EDID_4_SLAVE EDID_ALL_ZEROES_INVALID
#else
  #error "Selected interface does not support selected panel"
#endif


  //void run_startup_script_panel(){}
  //void run_shutdown_script_panel(){}
  inline void panel_script_startup(){
    OSDoutput();
  }

  








#elif PANEL_VERSION==PANEL_IS_LM270WQ
  inline void panel_print_name(){ Serial.println(F("LG LM270WQ*"));}
  const uint16_t BACKLIGHT_STRING_CURRENT_CONTINUIOUS = 350; // Current in milliamps, under 100% dutycycle operation
  const uint16_t BACKLIGHT_STRING_CURRENT_STROBING = 390; // Current in milliamps, under 10% dutycycle operation
  const uint16_t VIDEO_SIGNAL_TO_BACKLIGHT_ON_DELAY = 200; // MILLISECONDS signal-to-backlight delay as per panel datasheet recommendations
  const uint8_t PANEL_VOLTAGE = 12;
  #define PANEL_RESOLUTION_X 2560

  #if (HOST_INTERFACE == DISPLAYPORT)
    #define PANEL_BIT_DEPTH     10
  #else 
    #define PANEL_BIT_DEPTH     8 
  #endif

  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_LOW 
  #define PIXEL_ORDERING PIXEL_ORDERING_SEQUENTIAL
  #define LVDS_MAPPING LVDS_MAPPING_VESA
  #define PANEL_DEFAULT_EDID SELECTED_EDID_FACTORY_OC

  PROGMEM const uint8_t EDID_DVI_STOCK[]           = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x15, 0xA3, 0x69, 0x7A, 0x00, 0x00, 0x0A, 0x1A, 0x01, 0x03, 0x81, 0x47, 0x28, 0x78, 0xEE, 0x91, 0x85, 0xA7, 0x55, 0x4E, 0xA0, 0x25, 0x0C, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x68, 0x5E, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4D, 0x33, 0x32, 0x30, 0x44, 0x56, 0x4E, 0x30, 0x31, 0x00, 0xD6};
  PROGMEM const uint8_t EDID_DVI_OC[]              = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x15, 0xA3, 0x69, 0x7A, 0x00, 0x00, 0x0A, 0x1A, 0x01, 0x03, 0x81, 0x47, 0x28, 0x78, 0xEE, 0x91, 0x85, 0xA7, 0x55, 0x4E, 0xA0, 0x25, 0x0C, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x74, 0xB7, 0x00, 0x80, 0xA0, 0xA0, 0x20, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x68, 0x5E, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4D, 0x33, 0x32, 0x30, 0x44, 0x56, 0x4E, 0x30, 0x31, 0x00, 0x74};
  PROGMEM const uint8_t EDID_DP_STOCK[]            = {0x00}; // TODO: create a correct EDID
  PROGMEM const uint8_t EDID_DP_OC[]               = {0x00}; // TODO: create a correct EDID

#if (HOST_INTERFACE == DLDVI)
  #define EDID_0_SLOT EDID_DVI_STOCK
  #define EDID_1_SLOT EDID_DVI_OC
#elif (HOST_INTERFACE == DISPLAYPORT)
  #define EDID_0_SLOT EDID_DP_STOCK
  #define EDID_1_SLOT EDID_DP_OC
#else
  #error "Selected interface does not support selected panel"
#endif

  // TO-DO: SUPPORT 8BIT/10BIT SWAP BY CONNECTING AND USING THE PANEL INPUT PIN
  inline void panel_script_startup(){} // No panel startup script is necessary for this panel.  By default, any GPIOs will be left floating


  
#elif PANEL_VERSION==PANEL_IS_M320DVN01
  const uint16_t BACKLIGHT_STRING_CURRENT_CONTINUIOUS = 150; // Current in milliamps, under 100% dutycycle operation
  const uint16_t BACKLIGHT_STRING_CURRENT_STROBING = 300; // Current in milliamps, under 10% dutycycle operation
  const uint16_t VIDEO_SIGNAL_TO_BACKLIGHT_ON_DELAY = 200; // MILLISECONDS signal-to-backlight delay as per panel datasheet recommendations
  inline void panel_print_name(){ Serial.println(F("M320DVN01"));}
  const uint8_t PANEL_VOLTAGE = 12;
  #define PANEL_BIT_DEPTH     10 
  #define PANEL_RESOLUTION_X 2560
  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_LOW
  #define PIXEL_ORDERING PIXEL_ORDERING_SEQUENTIAL
  #define LVDS_MAPPING LVDS_MAPPING_VESA
  #define PANEL_DEFAULT_EDID SELECTED_EDID_FACTORY_OC

  #if (HOST_INTERFACE == DLDVI)
    #error "PANEL DOES NOT WORK WITH 8BPC MODE"
  #endif

  
    PROGMEM const uint8_t EDID_DVI_STOCK[]            = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x15, 0xA3, 0x69, 0x7A, 0x00, 0x00, 0x0A, 0x1A, 0x01, 0x03, 0x81, 0x47, 0x28, 0x78, 0xEE, 0x91, 0x85, 0xA7, 0x55, 0x4E, 0xA0, 0x25, 0x0C, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x68, 0x5E, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4D, 0x33, 0x32, 0x30, 0x44, 0x56, 0x4E, 0x30, 0x31, 0x00, 0xD6};
    PROGMEM const uint8_t EDID_DVI_OC[]               = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x15, 0xA3, 0x69, 0x7A, 0x00, 0x00, 0x0A, 0x1A, 0x01, 0x03, 0x81, 0x47, 0x28, 0x78, 0xEE, 0x91, 0x85, 0xA7, 0x55, 0x4E, 0xA0, 0x25, 0x0C, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFD, 0xB9, 0x00, 0x82, 0xA0, 0xA0, 0x23, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x68, 0x5E, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4D, 0x33, 0x32, 0x30, 0x44, 0x56, 0x4E, 0x30, 0x31, 0x00, 0xE4};

 // PROGMEM const uint8_t EDID_DP_STOCK[]             = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x20, 0xA3, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x04, 0xB5, 0x47, 0x28, 0x78, 0x27, 0x91, 0x85, 0xA7, 0x55, 0x4E, 0xA0, 0x25, 0x0C, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0xE4, 0x76, 0x00, 0xA0, 0xA0, 0xA0, 0x34, 0x50, 0x30, 0x20, 0x35, 0x00, 0x00, 0xB0, 0x31, 0x00, 0x00, 0x1E, 0x68, 0x5E, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x32, 0x4B, 0x49, 0x70, 0x1F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4D, 0x33, 0x32, 0x30, 0x44, 0x56, 0x4E, 0x30, 0x31, 0x01, 0xF9, 0x02, 0x03, 0x04, 0x81, 0xE4, 0x76, 0x00, 0xA0, 0xA0, 0xA0, 0x34, 0x50, 0x30, 0x20, 0x35, 0x00, 0x00, 0xB0, 0x31, 0x00, 0x00, 0x1E, 0x68, 0x5E, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFD};
//  PROGMEM const uint8_t EDID_DP_OC[]                = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x15, 0xA3, 0x69, 0x7A, 0x00, 0x00, 0x0A, 0x1A, 0x01, 0x04, 0xB5, 0x47, 0x28, 0x78, 0x27, 0x91, 0x85, 0xA7, 0x55, 0x4E, 0xA0, 0x25, 0x0C, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x74, 0xB7, 0x00, 0x80, 0xA0, 0xA0, 0x10, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x68, 0x5E, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0xC5, 0x8F, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x28, 0x78, 0x58, 0xAF, 0x2F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4D, 0x33, 0x32, 0x30, 0x44, 0x56, 0x4E, 0x30, 0x31, 0x01, 0x59, 0x02, 0x03, 0x04, 0x00, 0x74, 0xB7, 0x00, 0x80, 0xA0, 0xA0, 0x10, 0x50, 0x30, 0x20, 0x35, 0x00, 0x00, 0xB0, 0x31, 0x00, 0x00, 0x1E, 0x68, 0x5E, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0x00, 0xB0, 0x31, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85};
 // The DP/10bpc edids seem a bit wonky.  Try the EDID_V1.3 ones from the DVI block instead

  #define EDID_0_SLOT EDID_DVI_STOCK
  #define EDID_1_SLOT EDID_DVI_OC
               
  inline void panel_script_startup(){} // No panel startup script is necessary for this panel.  By default, any GPIOs will be left floating


#elif PANEL_VERSION==PANEL_IS_M240HW01
  inline void panel_print_name(){ Serial.println(F("AUO M240HW01"));}
  const uint16_t BACKLIGHT_STRING_CURRENT_CONTINUIOUS = 110; // Current in milliamps, under 100% dutycycle operation
  const uint16_t BACKLIGHT_STRING_CURRENT_STROBING = 250; // Current in milliamps, under 15% dutycycle operation
  const uint16_t VIDEO_SIGNAL_TO_BACKLIGHT_ON_DELAY = 200; // MILLISECONDS signal-to-backlight delay as per panel datasheet recommendations
  const uint8_t PANEL_VOLTAGE = 5;
  #define PANEL_RESOLUTION_X 1920
  #define PANEL_BIT_DEPTH     8 
  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_LOW 
  #define PIXEL_ORDERING PIXEL_ORDERING_LEFTRIGHT 
  #define LVDS_MAPPING LVDS_MAPPING_VESA  
  #define PANEL_DEFAULT_EDID SELECTED_EDID_FACTORY_OC

  PROGMEM const uint8_t EDID_DVI_STOCK[]               = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x25, 0x00, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x04, 0xA1, 0x35, 0x1E, 0x78, 0xE3, 0x9E, 0xE1, 0xA6, 0x54, 0x54, 0x97, 0x26, 0x0D, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x6D, 0xB2, 0x80, 0xA0, 0x70, 0x38, 0x12, 0x40, 0x30, 0x20, 0x35, 0x00, 0x13, 0x2B, 0x21, 0x00, 0x00, 0x1E, 0x8A, 0x6F, 0x80, 0xA0, 0x70, 0x38, 0x40, 0x40, 0x30, 0x20, 0x35, 0x00, 0x13, 0x2B, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x28, 0xC8, 0x2C, 0xDC, 0x2E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4D, 0x32, 0x34, 0x30, 0x48, 0x57, 0x30, 0x31, 0x3F, 0x00, 0xDA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  
#define EDID_0_SLOT EDID_DVI_STOCK

  //void run_startup_script_panel(){}
  //void run_shutdown_script_panel(){}
  inline void panel_script_startup(){} // No panel startup script is necessary for this panel.  By default, any GPIOs will be left floating


#elif PANEL_VERSION==PANEL_IS_LM270WF3
  inline void panel_print_name(){ Serial.println(F("LG LM270WF3"));}
  const uint16_t BACKLIGHT_STRING_CURRENT_CONTINUIOUS = 110; // Current in milliamps, under 100% dutycycle operation
  const uint16_t BACKLIGHT_STRING_CURRENT_STROBING = 220; // Current in milliamps, under 10% dutycycle operation
  const uint16_t VIDEO_SIGNAL_TO_BACKLIGHT_ON_DELAY = 200; // MILLISECONDS signal-to-backlight delay as per panel datasheet recommendations
  const uint8_t PANEL_VOLTAGE = 12;
  #define PANEL_RESOLUTION_X 1920
  #define PANEL_BIT_DEPTH     8 
  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_HIGH 
  #define PIXEL_ORDERING PIXEL_ORDERING_SEQUENTIAL
  #define LVDS_MAPPING LVDS_MAPPING_VESA



  PROGMEM const uint8_t EDID_DVI_STOCK[]           = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x27, 0x00, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x03, 0xA1, 0x3C, 0x22, 0x78, 0xE7, 0x7B, 0x61, 0xA4, 0x55, 0x4A, 0xA2, 0x27, 0x0C, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x8A, 0x6F, 0x80, 0xA0, 0x70, 0x38, 0x40, 0x40, 0x30, 0x20, 0x35, 0x00, 0x40, 0x44, 0x21, 0x00, 0x00, 0x1E, 0x29, 0x36, 0x80, 0xA0, 0x70, 0x38, 0x1F, 0x40, 0x30, 0x20, 0x35, 0x00, 0x40, 0x44, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4C, 0x4D, 0x32, 0x37, 0x30, 0x57, 0x46, 0x33, 0x0A, 0x00, 0xBE};
  PROGMEM const uint8_t EDID_DVI_OC[]              = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x27, 0x00, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x03, 0xA1, 0x3C, 0x22, 0x78, 0xE7, 0x7B, 0x61, 0xA4, 0x55, 0x4A, 0xA2, 0x27, 0x0C, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0xBF, 0xAD, 0x80, 0x50, 0x70, 0x38, 0x20, 0x40, 0x18, 0x20, 0x35, 0x00, 0x40, 0x44, 0x21, 0x00, 0x00, 0x1E, 0x8A, 0x6F, 0x80, 0xA0, 0x70, 0x38, 0x40, 0x40, 0x30, 0x20, 0x35, 0x00, 0x40, 0x44, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x4C, 0x4D, 0x32, 0x37, 0x30, 0x57, 0x46, 0x33, 0x0A, 0x00, 0x18};

  #define EDID_0_SLOT EDID_DVI_STOCK
  #define EDID_1_SLOT EDID_DVI_OC
  
  //void run_startup_script_panel(){}
  //void run_shutdown_script_panel(){}
  inline void panel_script_startup(){} // No panel startup script is necessary for this panel.  By default, any GPIOs will be left floating

  
#elif PANEL_VERSION==PANEL_IS_V390DK1
  inline void panel_print_name(){ Serial.println(F("CMI V390DK1-LS1"));}
  const uint16_t BACKLIGHT_STRING_CURRENT_CONTINUIOUS = 145; // Current in milliamps, under 100% dutycycle operation
  const uint16_t BACKLIGHT_STRING_CURRENT_STROBING = 360; // Current in milliamps, under 10% dutycycle operation
  const uint16_t VIDEO_SIGNAL_TO_BACKLIGHT_ON_DELAY = 200; // MILLISECONDS signal-to-backlight delay as per panel datasheet recommendations
  const uint8_t PANEL_VOLTAGE = 12;
  #define PANEL_RESOLUTION_X 2560 // This is wrong, but the ep269 can't handle more without rolling-over it's address space.  The ep369 does not use this option.

  #if (HOST_INTERFACE == DISPLAYPORT)
    #define PANEL_BIT_DEPTH     10
  #else 
    #define PANEL_BIT_DEPTH     8 
  #endif

  #define WATCH_FOR_MODE_CHANGE 
  #define LOW_FRAMERATES_SUPPORT_REQUIRED
  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_HIGH
  #define PIXEL_ORDERING PIXEL_ORDERING_SEQUENTIAL
  #define LVDS_MAPPING LVDS_MAPPING_VESA
  #define PANEL_DEFAULT_EDID SELECTED_EDID_FACTORY_SAFE
  #define PANEL_IIC_SPEED 50
#define PANEL_SDA_PIN PANEL_GPIO0
#define PANEL_SCL_PIN PANEL_GPIO1  

  PROGMEM const uint8_t EDID_DVI_STOCK[]           = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x02, 0x39, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x03, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x74, 0x80, 0x18, 0x71, 0x38, 0x2D, 0x40, 0x30, 0x20, 0x88, 0x00, 0x55, 0xE0, 0x31, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x32, 0x6B, 0x56, 0x33, 0x39, 0x30, 0x44, 0x4B, 0x31, 0x00, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  PROGMEM const uint8_t EDID_DVI_OC[]              = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x69, 0x33, 0x04, 0x39, 0x69, 0x7A, 0x00, 0x00, 0x01, 0x1A, 0x01, 0x03, 0xB5, 0x55, 0x30, 0x78, 0x26, 0x34, 0x7D, 0xA5, 0x55, 0x4E, 0x9E, 0x26, 0x0E, 0x47, 0x4A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x74, 0x00, 0x30, 0xF2, 0x70, 0x5A, 0x80, 0x30, 0x20, 0x88, 0x00, 0x55, 0xE0, 0x31, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x5A, 0x49, 0x53, 0x20, 0x34, 0x6B, 0x56, 0x33, 0x39, 0x30, 0x44, 0x4B, 0x31, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define EDID_0_SLOT EDID_DVI_STOCK
#define EDID_1_SLOT EDID_DVI_OC

inline void panel_script_startup(){panel_script_startup_v390dk1();}

// Assumptions: There exist two pins, GPIO_0, GPIO_1 which connect to the panel.
// Panel bit depth note: Available options are 6, 8, or 10.  Note that 6bit mode may be unavailable on some boards, but is almost never used, so this is not a problem.  In this case, the ep369 will Really be configured in 10bit mode.
// When using ep269, the system is always in 8-bit mode.

inline void panel_script_startup_v390dk1(){  
  zdelay(100); // Give the system time to boot up
  panel_script_refreshratechange_v390dk1(); // Set all parameters correctly
}


inline void panel_script_refreshratechange_v390dk1(){
	// code removed, sorry
}

#else
  #error "Unsupported PANEL_VERSION"
#endif


#ifdef EDID_7_SLOT
const uint8_t NUMBER_OF_FACTORY_EDIDS = 8;
#else
#ifdef EDID_6_SLOT
const uint8_t NUMBER_OF_FACTORY_EDIDS = 7;
#else
#ifdef EDID_5_SLOT
const uint8_t NUMBER_OF_FACTORY_EDIDS = 6;
#else
#ifdef EDID_4_SLOT
const uint8_t NUMBER_OF_FACTORY_EDIDS = 5;
#else
#ifdef EDID_3_SLOT
const uint8_t NUMBER_OF_FACTORY_EDIDS = 4;
#else
#ifdef EDID_2_SLOT
const uint8_t NUMBER_OF_FACTORY_EDIDS = 3;
#else
#ifdef EDID_1_SLOT
const uint8_t NUMBER_OF_FACTORY_EDIDS = 2;
#else
#ifdef EDID_0_SLOT
const uint8_t NUMBER_OF_FACTORY_EDIDS = 1;
#else
const uint8_t NUMBER_OF_FACTORY_EDIDS = 0;
  #error "Configuration failure! No EDID specified."
#endif
#endif
#endif
#endif
#endif
#endif
#endif
#endif

const uint8_t ADDED_DELAY_AFTER_PANEL_POWERUP = 0;
const uint8_t DELAY_BETWEEN_BACKLIGHT_POWEROFF_AND_PANEL_POWEROFF = 100;

#ifndef PANEL_DEFAULT_EDID
  #define PANEL_DEFAULT_EDID 0
#endif

#ifndef NEEDS_FAST_SYNC_CAPABILITY
  #define NEEDS_FAST_SYNC_CAPABILITY false 
  #warning "NEEDS_FAST_SYNC_CAPABILITY not set, defaulting to false"
#endif

#ifndef MASTERSLAVE_MODE
  #define MASTERSLAVE_MODE false 
  #warning "MASTERSLAVE_MODE not selected, defaulting to false"
#endif

#ifndef LVDS_SWING_LEVEL
  #define LVDS_SWING_LEVEL LVDS_SWING_LEVEL_LOW 
  #warning "LVDS swing level not selected, defaulting to low swing mode"
#endif

#ifndef PIXEL_ORDERING
  #define PIXEL_ORDERING PIXEL_ORDERING_SEQUENTIAL 
  #warning "Pixel ordering not selected, defaulting to sequential mode"
#endif

#ifndef LVDS_MAPPING
  #define LVDS_MAPPING LVDS_MAPPING_VESA
  #warning "LVDS mapping not selected, defaulting to VESA mode"
#endif


#endif
